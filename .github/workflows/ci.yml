name: CI
on:
  [ push, pull_request ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Run code quality checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c constraints.txt -e .
          pip install -U -c constraints.txt -r requirements-dev.txt
      - name: Run black
        run: make style
      - name: Run lint
        run: make lint
      - name: Run mypy
        run: make mypy

  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U tox
          sudo apt install -y graphviz pandoc
          pip install -c constraints.txt -e .
          # --- PIN TO 1.9.X HERE ---
          pip install "qiskit-sphinx-theme==1.9.*"
      - name: Build documentation
        run: tox -edocs
      - name: Upload documentation
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: html_docs
          path: docs/_build/html

  unit-tests:
    needs: [ "code-quality", "documentation" ]
    name: Run unit tests (20x) - python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9, '3.10' ]
        os: [ "macOS-latest", "ubuntu-latest", "windows-latest" ]
    env:
      LOG_LEVEL: DEBUG
      STREAM_LOG: True
      QISKIT_IN_PARALLEL: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c constraints.txt -e .
          pip install -U -c constraints.txt -r requirements-dev.txt

      - name: Run unit tests 20 times
        run: |
          for i in $(seq 1 20); do
            echo "============="
            echo "Test run #$i"
            echo "============="
            make unit-test-coverage
          done

      - name: Report coverage to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: unit-tests_python${{ matrix.python-version }}-${{ matrix.os }}
          parallel: true
          path-to-lcov: coverage.lcov

  integration-tests-1:
    if: ${{ github.event_name == 'push' }}
    needs: [ "unit-tests" ]
    name: Run integration tests 1 (20x) - ${{ matrix.environment }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ "ubuntu-latest" ]
        environment: [ "ibm-quantum-production" ]
    environment: ${{ matrix.environment }}
    env:
      QISKIT_IBM_TOKEN: ${{ secrets.QISKIT_IBM_TOKEN }}
      QISKIT_IBM_URL: ${{ secrets.QISKIT_IBM_URL }}
      QISKIT_IBM_INSTANCE: ${{ secrets.QISKIT_IBM_INSTANCE }}
      LOG_LEVEL: DEBUG
      STREAM_LOG: True
      QISKIT_IN_PARALLEL: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
      - name: Run integration tests 1 (20x)
        run: |
          for i in $(seq 1 20); do
            echo "============================"
            echo "Integration tests 1 run #$i"
            echo "============================"
            make integration-test-1
          done

  integration-tests-2:
    if: ${{ github.event_name == 'push' }}
    needs: [ "unit-tests" ]
    name: Run integration tests 2 (20x) - ${{ matrix.environment }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ "ubuntu-latest" ]
        environment: [ "ibm-quantum-production" ]
    environment: ${{ matrix.environment }}
    env:
      QISKIT_IBM_TOKEN: ${{ secrets.QISKIT_IBM_TOKEN }}
      QISKIT_IBM_URL: ${{ secrets.QISKIT_IBM_URL }}
      QISKIT_IBM_INSTANCE: ${{ secrets.QISKIT_IBM_INSTANCE }}
      LOG_LEVEL: DEBUG
      STREAM_LOG: True
      QISKIT_IN_PARALLEL: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
      - name: Run integration tests 2 (20x)
        run: |
          for i in $(seq 1 20); do
            echo "============================"
            echo "Integration tests 2 run #$i"
            echo "============================"
            make integration-test-2
          done

  integration-tests-3:
    if: ${{ github.event_name == 'push' }}
    needs: [ "unit-tests" ]
    name: Run integration tests 3 (20x) - ${{ matrix.environment }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ "ubuntu-latest" ]
        environment: [ "ibm-quantum-production" ]
    environment: ${{ matrix.environment }}
    env:
      QISKIT_IBM_TOKEN: ${{ secrets.QISKIT_IBM_TOKEN }}
      QISKIT_IBM_URL: ${{ secrets.QISKIT_IBM_URL }}
      QISKIT_IBM_INSTANCE: ${{ secrets.QISKIT_IBM_INSTANCE }}
      LOG_LEVEL: DEBUG
      STREAM_LOG: True
      QISKIT_IN_PARALLEL: True
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
      - name: Run integration tests 3 (20x)
        run: |
          for i in $(seq 1 20); do
            echo "============================"
            echo "Integration tests 3 run #$i"
            echo "============================"
            make integration-test-3
          done

  tests-finished:
    name: Submit code coverage metrics
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Notify coveralls.io that all parallel tests have finished
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
